{"ast":null,"code":"const urlBase = \"http://localhost:4000/login\";\nexport async function login(usuario, senha) {\n  const resposta = await fetch(urlBase, {\n    // URL corrigida\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      usuario,\n      senha\n    })\n  });\n  if (!resposta.ok) {\n    // Verifica se a resposta não está ok\n    throw new Error(`Erro na requisição: ${resposta.statusText}`);\n  }\n  return await resposta.json();\n}","map":{"version":3,"names":["urlBase","login","usuario","senha","resposta","fetch","method","credentials","headers","body","JSON","stringify","ok","Error","statusText","json"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/At_3/frontend/src/servicos/loginService.js"],"sourcesContent":["const urlBase = \"http://localhost:4000/login\";\n\nexport async function login(usuario, senha) {\n    const resposta = await fetch(urlBase, { // URL corrigida\n        method: \"POST\",\n        credentials: 'include',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ usuario, senha })\n    });\n\n    if (!resposta.ok) { // Verifica se a resposta não está ok\n        throw new Error(`Erro na requisição: ${resposta.statusText}`);\n    }\n\n    return await resposta.json();\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,6BAA6B;AAE7C,OAAO,eAAeC,KAAKA,CAACC,OAAO,EAAEC,KAAK,EAAE;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAAE;IACpCM,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,OAAO;MAAEC;IAAM,CAAC;EAC3C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;IAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,UAAU,EAAE,CAAC;EACjE;EAEA,OAAO,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}