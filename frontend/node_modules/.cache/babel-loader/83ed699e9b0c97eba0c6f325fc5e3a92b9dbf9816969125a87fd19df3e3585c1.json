{"ast":null,"code":"const urlBase = \"http://localhost:4000/departamento\";\nasync function verificarResposta(resposta) {\n  if (!resposta.ok) {\n    const mensagem = await resposta.text();\n    throw new Error(`Erro ${resposta.status}: ${mensagem}`);\n  }\n  return resposta.json();\n}\nexport async function gravar(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return verificarResposta(resposta);\n}\nexport async function alterar(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return verificarResposta(resposta);\n}\nexport async function excluir(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return verificarResposta(resposta);\n}\nexport async function consultarTodos(token) {\n  const resposta = await fetch(urlBase, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include'\n  });\n  return verificarResposta(resposta);\n}","map":{"version":3,"names":["urlBase","verificarResposta","resposta","ok","mensagem","text","Error","status","json","gravar","departamento","token","fetch","method","headers","credentials","body","JSON","stringify","alterar","excluir","consultarTodos"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/At_3/frontend/src/servicos/departamentoService.js"],"sourcesContent":["const urlBase = \"http://localhost:4000/departamento\";\n\nasync function verificarResposta(resposta) {\n    if (!resposta.ok) {\n        const mensagem = await resposta.text();\n        throw new Error(`Erro ${resposta.status}: ${mensagem}`);\n    }\n    return resposta.json();\n}\n\nexport async function gravar(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"POST\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return verificarResposta(resposta);\n}\n\nexport async function alterar(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"PUT\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return verificarResposta(resposta);\n}\n\nexport async function excluir(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"DELETE\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return verificarResposta(resposta);\n}\n\nexport async function consultarTodos(token) {\n    const resposta = await fetch(urlBase, {\n        method: \"GET\",\n        headers: { \n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include'\n    });\n    return verificarResposta(resposta);\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;AAEpD,eAAeC,iBAAiBA,CAACC,QAAQ,EAAE;EACvC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IACd,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtC,MAAM,IAAIC,KAAK,CAAC,QAAQJ,QAAQ,CAACK,MAAM,KAAKH,QAAQ,EAAE,CAAC;EAC3D;EACA,OAAOF,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAeC,MAAMA,CAACC,YAAY,EAAEC,KAAK,EAAE;EAC9C,MAAMT,QAAQ,GAAG,MAAMU,KAAK,CAACZ,OAAO,EAAE;IAClCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUH,KAAK;IACpC,CAAC;IACDI,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;EACrC,CAAC,CAAC;EACF,OAAOT,iBAAiB,CAACC,QAAQ,CAAC;AACtC;AAEA,OAAO,eAAeiB,OAAOA,CAACT,YAAY,EAAEC,KAAK,EAAE;EAC/C,MAAMT,QAAQ,GAAG,MAAMU,KAAK,CAACZ,OAAO,EAAE;IAClCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUH,KAAK;IACpC,CAAC;IACDI,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;EACrC,CAAC,CAAC;EACF,OAAOT,iBAAiB,CAACC,QAAQ,CAAC;AACtC;AAEA,OAAO,eAAekB,OAAOA,CAACV,YAAY,EAAEC,KAAK,EAAE;EAC/C,MAAMT,QAAQ,GAAG,MAAMU,KAAK,CAACZ,OAAO,EAAE;IAClCa,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUH,KAAK;IACpC,CAAC;IACDI,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;EACrC,CAAC,CAAC;EACF,OAAOT,iBAAiB,CAACC,QAAQ,CAAC;AACtC;AAEA,OAAO,eAAemB,cAAcA,CAACV,KAAK,EAAE;EACxC,MAAMT,QAAQ,GAAG,MAAMU,KAAK,CAACZ,OAAO,EAAE;IAClCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAE,UAAUH,KAAK;IACpC,CAAC;IACDI,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAOd,iBAAiB,CAACC,QAAQ,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}