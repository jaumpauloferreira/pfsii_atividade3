{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaop\\\\Desktop\\\\Unoeste ADS\\\\6-Sexto Bimestre\\\\Programa\\xE7\\xE3o Full Stack II\\\\backup_at1\\\\Atividade_1\\\\At_3\\\\frontend\\\\src\\\\componentes\\\\busca\\\\CaixaSelecao.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\n\n//Depende de componentes estilizados pelo bootstrap\n//endereFonteDados: informa qual a url que a caixa de seleção utilizará para recuperar os dados\n//campoChave: Nos dados, qual campo é a chave primária\n//campoExibicao: Qual coluna deve ser exibida pela caixa de seleção\n//funcaoSelecao : Que é a função que receberá o objeto selecionado pelo usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CaixaSelecao({\n  enderecoFonteDados,\n  campoChave,\n  campoExibicao,\n  funcaoSelecao,\n  localLista,\n  tokenAcesso\n}) {\n  _s();\n  const [valorSelecionado, setValorSelecionado] = useState({\n    [campoChave]: 0,\n    [campoExibicao]: \"Não foi possível obter os dados do backend\"\n  });\n  const [carregandoDados, setCarregandoDados] = useState(false);\n  const [dados, setDados] = useState([]);\n  useEffect(() => {\n    try {\n      setCarregandoDados(true);\n      let config;\n      if (tokenAcesso) {\n        config = {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": tokenAcesso\n          },\n          credentials: 'include'\n        };\n      } else {\n        config = {\n          method: \"GET\",\n          credentials: 'include'\n        };\n      }\n      fetch(enderecoFonteDados, config).then(resposta => {\n        if (resposta.ok) {\n          //código 200\n          return resposta.json();\n        } else {\n          return [{\n            [campoChave]: 0,\n            [campoExibicao]: \"Não foi possível obter os dados do backend\"\n          }];\n        }\n      }).then(listaDados => {\n        setCarregandoDados(false);\n        if (localLista) {\n          setDados(listaDados[localLista]);\n        } else {\n          setDados(listaDados);\n        }\n        //lembrar que a minha caixa de seleção possui um valor previamente selecionado\n        if (listaDados.length > 0) {\n          setValorSelecionado(listaDados[0]);\n          funcaoSelecao(listaDados[0]);\n        }\n      });\n    } catch (erro) {\n      setCarregandoDados(false);\n      setDados([{\n        [campoChave]: 0,\n        [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message\n      }]);\n    }\n  }, []); //willMount\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    border: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 11,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: evento => {\n            const itemSelecionado = evento.currentTarget.value;\n            //ValorSelecionado e funcaoSelecao esperam objetos da lista\n            //gerando uma lista somente de ids, cpfs, codigo\n            const pos = dados.map(item => item[campoChave].toString()).indexOf(itemSelecionado);\n            setValorSelecionado(dados[pos]);\n            funcaoSelecao(dados[pos]);\n          },\n          children: dados === null || dados === void 0 ? void 0 : dados.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item[campoChave],\n              children: item[campoExibicao]\n            }, item[campoChave], false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 1,\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          className: carregandoDados ? \"visible\" : \"invisible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(CaixaSelecao, \"2cT2wCQZcyYPn3Z/G8hr1pdKvu4=\");\n_c = CaixaSelecao;\nvar _c;\n$RefreshReg$(_c, \"CaixaSelecao\");","map":{"version":3,"names":["useEffect","useState","Container","Col","Form","Row","Spinner","jsxDEV","_jsxDEV","CaixaSelecao","enderecoFonteDados","campoChave","campoExibicao","funcaoSelecao","localLista","tokenAcesso","_s","valorSelecionado","setValorSelecionado","carregandoDados","setCarregandoDados","dados","setDados","config","method","headers","credentials","fetch","then","resposta","ok","json","listaDados","length","erro","message","border","children","md","Select","onChange","evento","itemSelecionado","currentTarget","value","pos","map","item","toString","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/At_3/frontend/src/componentes/busca/CaixaSelecao.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\n\n//Depende de componentes estilizados pelo bootstrap\n//endereFonteDados: informa qual a url que a caixa de seleção utilizará para recuperar os dados\n//campoChave: Nos dados, qual campo é a chave primária\n//campoExibicao: Qual coluna deve ser exibida pela caixa de seleção\n//funcaoSelecao : Que é a função que receberá o objeto selecionado pelo usuário\nexport default function CaixaSelecao({ enderecoFonteDados,\n    campoChave,\n    campoExibicao,\n    funcaoSelecao,\n    localLista,\n    tokenAcesso }) {\n    const [valorSelecionado, setValorSelecionado] = useState({\n        [campoChave]: 0,\n        [campoExibicao]:\"Não foi possível obter os dados do backend\"\n    });\n    const [carregandoDados, setCarregandoDados] = useState(false);\n    const [dados, setDados] = useState([]);\n\n    useEffect(() => {\n        try {\n            setCarregandoDados(true);\n            let config;\n            if (tokenAcesso){\n                config = {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": tokenAcesso\n                    },\n                    credentials: 'include'\n                }\n            }\n            else\n            {\n                config = { method: \"GET\", credentials: 'include' };\n            }\n            fetch(enderecoFonteDados, config).then((resposta) => {\n                if (resposta.ok) {  //código 200\n                    return resposta.json();\n                }\n                else {\n                    return ([{\n                        [campoChave]: 0,\n                        [campoExibicao]:\"Não foi possível obter os dados do backend\"\n                    }\n                    ]);\n                }\n            }).then((listaDados) => {\n                setCarregandoDados(false);\n                if (localLista){\n                    setDados(listaDados[localLista]);\n                }\n                else{\n                    setDados(listaDados);\n                }\n                //lembrar que a minha caixa de seleção possui um valor previamente selecionado\n                if (listaDados.length > 0){\n                   setValorSelecionado(listaDados[0]);\n                   funcaoSelecao(listaDados[0]);     \n                }\n            });\n        } catch(erro){\n            setCarregandoDados(false);\n            setDados([{\n                       [campoChave]: 0,\n                       [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message \n                      }\n                    ]);\n        }\n    }, []);  //willMount\n\n    return (\n        <Container border>\n            <Row>\n                <Col md={11}>\n                    <Form.Select\n                                 onChange={(evento) => {\n                                    const itemSelecionado = evento.currentTarget.value;\n                                    //ValorSelecionado e funcaoSelecao esperam objetos da lista\n                                                //gerando uma lista somente de ids, cpfs, codigo\n                                    const pos = dados.map((item) => item[campoChave].toString()).indexOf(itemSelecionado);\n                                    setValorSelecionado(dados[pos]);\n                                    funcaoSelecao(dados[pos]);\n                                 }}>\n                        {\n                            dados?.map((item) => {\n                                return <option key={item[campoChave]} \n                                               value={item[campoChave]}>\n                                                {item[campoExibicao]}\n                                       </option>\n                            })\n                        }\n                        \n                    </Form.Select>\n                </Col>\n                <Col md={1}>\n                    <Spinner className={carregandoDados ? \"visible\" : \"invisible\"}></Spinner>\n                </Col>\n            </Row>\n        </Container>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}