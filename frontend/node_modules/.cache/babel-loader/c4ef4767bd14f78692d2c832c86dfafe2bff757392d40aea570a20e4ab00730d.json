{"ast":null,"code":"const urlBase = \"http://localhost:4000/funcionario\";\n\n// Função para gravar um novo funcionário (POST)\n\n// Função para alterar um funcionário existente (PUT)\nexport async function alterar(funcionario, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": token\n    },\n    credentials: 'include',\n    body: JSON.stringify(funcionario)\n  });\n  return await resposta.json();\n}\n\n// Função para excluir um funcionário (DELETE)\nexport async function excluir(codigoFuncionario, token) {\n  const resposta = await fetch(`${urlBase}/${codigoFuncionario}`, {\n    // Passa o código do funcionário na URL\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": token\n    },\n    credentials: 'include'\n  });\n  return await resposta.json();\n}\n\n// Função para consultar todos os funcionários (GET)\nexport async function consultarTodos(token) {\n  const resposta = await fetch(urlBase, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": token\n    },\n    credentials: 'include'\n  });\n  return await resposta.json();\n}","map":{"version":3,"names":["urlBase","alterar","funcionario","token","resposta","fetch","method","headers","credentials","body","JSON","stringify","json","excluir","codigoFuncionario","consultarTodos"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/pfsii_atividade3/frontend/src/servicos/funcionarioService.js"],"sourcesContent":["const urlBase = \"http://localhost:4000/funcionario\";\n\n// Função para gravar um novo funcionário (POST)\n\n\n// Função para alterar um funcionário existente (PUT)\nexport async function alterar(funcionario, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"PUT\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        },\n        credentials: 'include',\n        body: JSON.stringify(funcionario)\n    });\n    return await resposta.json();\n}\n\n// Função para excluir um funcionário (DELETE)\nexport async function excluir(codigoFuncionario, token) {\n    const resposta = await fetch(`${urlBase}/${codigoFuncionario}`, { // Passa o código do funcionário na URL\n        method: \"DELETE\",\n        headers: { \n            \"Authorization\": token\n        },\n        credentials: 'include'\n    });\n    return await resposta.json();\n}\n\n// Função para consultar todos os funcionários (GET)\nexport async function consultarTodos(token) {\n    const resposta = await fetch(urlBase, {\n        method: \"GET\",\n        headers: { \n            \"Authorization\": token\n        },\n        credentials: 'include'\n    });\n    return await resposta.json();\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,mCAAmC;;AAEnD;;AAGA;AACA,OAAO,eAAeC,OAAOA,CAACC,WAAW,EAAEC,KAAK,EAAE;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,WAAW;EACpC,CAAC,CAAC;EACF,OAAO,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;;AAEA;AACA,OAAO,eAAeC,OAAOA,CAACC,iBAAiB,EAAEX,KAAK,EAAE;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIc,iBAAiB,EAAE,EAAE;IAAE;IAC9DR,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACL,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;;AAEA;AACA,OAAO,eAAeG,cAAcA,CAACZ,KAAK,EAAE;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}