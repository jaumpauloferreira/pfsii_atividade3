{"ast":null,"code":"const urlBase = \"http://localhost:4000/departamento\";\nexport async function gravar(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": token\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return await resposta.json();\n}\nexport async function alterar(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": token\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return await resposta.json();\n}\nexport async function excluir(codigo, token) {\n  const resposta = await fetch(`${urlBase}/${codigo}`, {\n    // Passa o código na URL\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": token\n    },\n    credentials: 'include'\n  });\n\n  // Verifique o status e o conteúdo antes de converter para JSON\n  console.log('Status da resposta:', resposta.status);\n  const conteudo = await resposta.text();\n  console.log('Conteúdo da resposta:', conteudo);\n\n  // Tente parsear como JSON se o status for de sucesso (200-299)\n  if (resposta.ok) {\n    return JSON.parse(conteudo);\n  } else {\n    return {\n      status: false,\n      mensagem: 'Erro ao excluir departamento'\n    };\n  }\n}","map":{"version":3,"names":["urlBase","gravar","departamento","token","resposta","fetch","method","headers","credentials","body","JSON","stringify","json","alterar","excluir","codigo","console","log","status","conteudo","text","ok","parse","mensagem"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/At_3/frontend/src/servicos/departamentoService.js"],"sourcesContent":["const urlBase = \"http://localhost:4000/departamento\";\n\nexport async function gravar(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"POST\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return await resposta.json();\n}\n\nexport async function alterar(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"PUT\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return await resposta.json();\n}\n\nexport async function excluir(codigo, token) {\n    const resposta = await fetch(`${urlBase}/${codigo}`, {  // Passa o código na URL\n        method: \"DELETE\",\n        headers: { \n            \"Authorization\": token\n        },\n        credentials: 'include'\n    });\n\n    // Verifique o status e o conteúdo antes de converter para JSON\n    console.log('Status da resposta:', resposta.status);\n    const conteudo = await resposta.text();\n    console.log('Conteúdo da resposta:', conteudo);\n\n    // Tente parsear como JSON se o status for de sucesso (200-299)\n    if (resposta.ok) {\n        return JSON.parse(conteudo);\n    } else {\n        return { status: false, mensagem: 'Erro ao excluir departamento' };\n    }\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;AAEpD,OAAO,eAAeC,MAAMA,CAACC,YAAY,EAAEC,KAAK,EAAE;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;EACrC,CAAC,CAAC;EACF,OAAO,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;AAEA,OAAO,eAAeC,OAAOA,CAACX,YAAY,EAAEC,KAAK,EAAE;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;EACrC,CAAC,CAAC;EACF,OAAO,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;AAEA,OAAO,eAAeE,OAAOA,CAACC,MAAM,EAAEZ,KAAK,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIe,MAAM,EAAE,EAAE;IAAG;IACpDT,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACL,eAAe,EAAEJ;IACrB,CAAC;IACDK,WAAW,EAAE;EACjB,CAAC,CAAC;;EAEF;EACAQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEb,QAAQ,CAACc,MAAM,CAAC;EACnD,MAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;EACtCJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,QAAQ,CAAC;;EAE9C;EACA,IAAIf,QAAQ,CAACiB,EAAE,EAAE;IACb,OAAOX,IAAI,CAACY,KAAK,CAACH,QAAQ,CAAC;EAC/B,CAAC,MAAM;IACH,OAAO;MAAED,MAAM,EAAE,KAAK;MAAEK,QAAQ,EAAE;IAA+B,CAAC;EACtE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}