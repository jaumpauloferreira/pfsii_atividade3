{"ast":null,"code":"const urlBase = \"http://localhost:4000/departamento\";\n\n// Função para gravar (adicionar) um departamento\nexport async function gravar(departamento, token) {\n  const resposta = await fetch(urlBase, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}` // Token de autorização\n    },\n    credentials: 'include',\n    // Para enviar cookies se houver\n    body: JSON.stringify(departamento) // Converte o departamento para JSON\n  });\n  return await resposta.json(); // Retorna a resposta como JSON\n}\n\n// Função para alterar (editar) um departamento\nexport async function alterar(departamento, token) {\n  const resposta = await fetch(`${urlBase}/${departamento.codigo}`, {\n    // Inclui o código do departamento na URL\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include',\n    body: JSON.stringify(departamento)\n  });\n  return await resposta.json();\n}\n\n// Função para excluir um departamento\nexport async function excluir(codigo, token) {\n  const resposta = await fetch(`${urlBase}/${codigo}`, {\n    // Inclui o código do departamento na URL\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include'\n  });\n  return await resposta.json();\n}\n\n// Função para consultar todos os departamentos\nexport async function consultarTodos(token) {\n  const resposta = await fetch(urlBase, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    },\n    credentials: 'include'\n  });\n  return await resposta.json();\n}","map":{"version":3,"names":["urlBase","gravar","departamento","token","resposta","fetch","method","headers","credentials","body","JSON","stringify","json","alterar","codigo","excluir","consultarTodos"],"sources":["C:/Users/joaop/Desktop/Unoeste ADS/6-Sexto Bimestre/Programação Full Stack II/backup_at1/Atividade_1/At_3/frontend/src/servicos/departamentoService.js"],"sourcesContent":["const urlBase = \"http://localhost:4000/departamento\";\n\n// Função para gravar (adicionar) um departamento\nexport async function gravar(departamento, token) {\n    const resposta = await fetch(urlBase, {\n        method: \"POST\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}` // Token de autorização\n        },\n        credentials: 'include', // Para enviar cookies se houver\n        body: JSON.stringify(departamento) // Converte o departamento para JSON\n    });\n    return await resposta.json(); // Retorna a resposta como JSON\n}\n\n// Função para alterar (editar) um departamento\nexport async function alterar(departamento, token) {\n    const resposta = await fetch(`${urlBase}/${departamento.codigo}`, { // Inclui o código do departamento na URL\n        method: \"PUT\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(departamento)\n    });\n    return await resposta.json();\n}\n\n// Função para excluir um departamento\nexport async function excluir(codigo, token) {\n    const resposta = await fetch(`${urlBase}/${codigo}`, { // Inclui o código do departamento na URL\n        method: \"DELETE\",\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include'\n    });\n    return await resposta.json();\n}\n\n// Função para consultar todos os departamentos\nexport async function consultarTodos(token) {\n    const resposta = await fetch(urlBase, {\n        method: \"GET\",\n        headers: { \n            \"Authorization\": `Bearer ${token}`\n        },\n        credentials: 'include'\n    });\n    return await resposta.json();\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;;AAEpD;AACA,OAAO,eAAeC,MAAMA,CAACC,YAAY,EAAEC,KAAK,EAAE;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACvC,CAAC;IACDK,WAAW,EAAE,SAAS;IAAE;IACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY,CAAC,CAAC;EACvC,CAAC,CAAC;EACF,OAAO,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC;;AAEA;AACA,OAAO,eAAeC,OAAOA,CAACX,YAAY,EAAEC,KAAK,EAAE;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIE,YAAY,CAACY,MAAM,EAAE,EAAE;IAAE;IAChER,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUJ,KAAK;IACpC,CAAC;IACDK,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;EACrC,CAAC,CAAC;EACF,OAAO,MAAME,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;;AAEA;AACA,OAAO,eAAeG,OAAOA,CAACD,MAAM,EAAEX,KAAK,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIc,MAAM,EAAE,EAAE;IAAE;IACnDR,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUJ,KAAK;IACpC,CAAC;IACDK,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC;;AAEA;AACA,OAAO,eAAeI,cAAcA,CAACb,KAAK,EAAE;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAE;IAClCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAE,UAAUJ,KAAK;IACpC,CAAC;IACDK,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}